<?php

namespace app\home\controller\goods;

use app\common\model\AgentPath;
use app\common\model\MoneyLog;
use app\common\model\UserModel;
use app\common\model\Video;
use app\common\model\VideoDetail;
use app\common\model\VideoType;
use app\common\traites\PublicCrudTrait;
use app\home\controller\Base;
use app\home\controller\service\GoodsService;
use think\facade\Db;
use think\facade\Request;

class GoodsInfo extends Base
{
    protected $model;
    protected $service;
    protected $UserInfo;
    use PublicCrudTrait;

    public function initialize()
    {
        $this->service = new GoodsService();
        $this->UserInfo = session('home_user');
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    //其实就是热搜 热搜主题
    public function hot_search_topic(){
        $map = [
            ['is_size','=',0],
            ['status','=',1],
            ['is_show','=',1],
            ['pid','=',0],
        ];
        $HotSearchTopic =  VideoType::where($map)->limit(6)->order('sort desc')->select();
        return show($HotSearchTopic);
    }

    //热搜标签
    public function hot_search_label(){

        $data=[
            '国产',
            '美女',
            '日本',
            '韩国',
        ];
        return show($data);
    }
    //热搜剧主  电影
    public function hot_search_dramatist(){
        $count = Video::whereLike('vod_play_from','%m3u8%')->count('id');
        $data = Video::where('video_price','<=',0)->whereLike('vod_play_from','%m3u8%')->field('id,title')->limit(rand(0,$count/8),8)->order('id desc')->select();

        if (empty($data)){
            return show();
        }
        $array = array();
        foreach ($data as $key=>$value){
            $array[$value['id']]=$value['title'];
        }
        return show($array);
    }


    //视频点赞
    public function give_the_thumbs_up(){
        $content_id = $this->request->post('content_id/d',0);
        $content_title= $this->request->post('content_title','');

        if (empty($content_id) || $content_id<0){
            return show([],0,'参数content_id错误');
        }
        if (empty($content_title)){
            return show([],0,'参数content_title错误');
        }

        $user = session('home_user');
        $update = [
            'content_id'=>$content_id,
            //'content_title'=>$content_title,
            'uid'=>$user['id'],
        ];
        //查询是否点赞了
        $find = Db::name('video_fabulous')->where($update)->find();
        if(!empty($find)){
            Db::name('video_fabulous')->where($update)->delete();
            return show([]);
        }

        $update = [
            'content_id'=>$content_id,
            'content_title'=>$content_title,
            'uid'=>$user['id'],
            'unickname'=>$user['nickname'],
            'uhead'=>$user['head_img'],
            'create_time'=>date('Y-m-d H:i:s')
        ];

        Db::name('video_fabulous')->insert($update);
        return show([]);
    }

    //视频评论
    public function video_comment(){
        $content_id = $this->request->post('content_id/d',0);
        $content_title= $this->request->post('content_title','');
        $ucontent= $this->request->post('ucontent','');

        if ($content_id <= 0){
            return show([],0,'参数content_id错误');
        }
        if (empty($content_title)){
            return show([],0,'参数content_title错误');
        }
        if (empty($ucontent)){
            return show([],0,'参数ucontent错误');
        }

        $user = session('home_user');


        $update = [
            'content_id'=>$content_id,
            'content_title'=>$content_title,
            'uid'=>$user['id'],
            'unickname'=>$user['nickname'],
            'ucontent'=>$ucontent,
            'uhead'=>$user['head_img'],
            'create_time'=>date('Y-m-d H:i:s'),
            'comment_id'=>0,
        ];

        //插入评论信息
        Db::name('video_comment')->insertGetId($update);
        return show([]);
    }

    //视频回复
    public function video_reply(){
        $content_id = $this->request->post('content_id/d',0);
        $content_title= $this->request->post('content_title','');
        $ucontent= $this->request->post('ucontent','');
        $comment_id= $this->request->post('comment_id/d',0);
        if ($content_id <= 0){
            return show([],0,'参数content_id错误');
        }
        if ($comment_id <= 0){
            return show([],0,'参数comment_id错误');
        }
        if (empty($content_title)){
            return show([],0,'参数content_title错误');
        }
        if (empty($ucontent)){
            return show([],0,'参数ucontent错误');
        }

        $user = session('home_user');


        $update = [
            'content_id'=>$content_id,
            'content_title'=>$content_title,
            'uid'=>$user['id'],
            'unickname'=>$user['nickname'],
            'ucontent'=>$ucontent,
            'uhead'=>$user['head_img'],
            'create_time'=>date('Y-m-d H:i:s'),
            'comment_id'=>$comment_id,
        ];
        Db::name('video_comment')->insert($update);
        return show([]);
    }

    //视频回复列表
    public function video_comment_list(){
        $content_id = $this->request->post('content_id/d',0);
        $page = $this->request->post('page/d',0);
        $limit = $this->request->post('limit/d',20);

        if ($content_id <= 0){
            return show([],0,'参数content_id错误');
        }

        $list = Db::name('video_fabulous')->where('content_id',$content_id)->order('id asc')->paginate([
            'list_rows'=> $limit,
            'page' => $page,
        ]);
        return show($list);
    }

    //新片榜
    public function video_new_list(){
        $new_type = $this->request->post('new_type',1);
        //new_type 1最新上传   2 热度榜  3人气博主榜   4新星人气榜

        if ($new_type <=0){
            return show([],0,'参数new_type错误');
        }

        $map = [['a.status','=',1],['a.vod_play_from','like','%m3u8%'],];
        if ($new_type == 1){
            $list =  Video::page_list($map,4,0,'id desc');
        }

        if ($new_type == 2){
            $list =  Video::page_list($map,4,0,'heat desc');

        }

        if ($new_type == 3){
            $list =  Video::page_list($map,8,0,'heat desc');
        }

        if ($new_type == 4){
            $list =  Video::page_list($map,8,0,'heat desc');
        }
        return show($list);
    }

    //我的收藏 我的点赞
    public function my_give_the_thumbs_up(){
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量
        $user = session('home_user');
        $list = Db::name('video_fabulous')
            ->where('uid',$user['id'])
            ->order('id desc')
            ->paginate(['list_rows' => $limit, 'page' => $page])->each(function($item, $key){
                //查询视频详情
                $find = VideoDetail::where('vod_id',$item['content_id'])->find();

                $item['vod_play_url'] = '';
                $item['thumb_url'] = '';
                if (!empty($find)){

                    $item['vod_play_url'] = $find['vod_play_url'];
                    $item['thumb_url'] = $find['vod_pic'];
                    $item['vod_play_from'] = $find['vod_play_from'];
                    $item['title'] = $find['vod_name'];
                }

                return $item;
            });
        show($list);
    }

    //我的视频
    public function my_upload(){
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量

        $home_user = session('home_user');
        $map=[];
        $map[] = ['admin_uid','=',$home_user['id']];
        $list = Video::page_list($map,$limit,$page);
        return show($list);
    }

    //点赞我的视频  我收到消息
    public function fabulous_msg(){
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量

        $home_user = session('home_user');
        $map=[];
        $map[] = ['admin_uid','=',$home_user['id']];
        $list = Db::name('video_fabulous')->alias('a')
            ->join('video','a.content_id = video.id')
            ->where($map)
            ->field('a.*,video.admin_uid')
            ->order('a.id desc')
            ->paginate([
                'list_rows'=> $limit,
                'page' => $page,
            ])->each(function($item, $key){
                Db::name('video_fabulous')->where('id',$item['id'])->update(['is_read'=>1]);
                return $item;
            });
        return show($list);
    }
    //评论我的视频 我收到消息
    public function comment_msg(){
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量

        $home_user = session('home_user');
        $map=[];
        $map[] = ['admin_uid','=',$home_user['id']];
        $list = Db::name('video_comment')->alias('a')
            ->join('video','a.content_id = video.id')
            ->where($map)
            ->field('a.*,video.admin_uid')
            ->order('a.id desc')
            ->paginate([
                'list_rows'=> $limit,
                'page' => $page,
            ])
            ->each(function($item, $key){
                Db::name('video_comment')->where('id',$item['id'])->update(['is_read'=>1]);
                return $item;
            })
        ;
        return show($list);
    }

    //点赞未读消息
    public function fabulous_unread(){
        $home_user = session('home_user');
        $map[] = ['admin_uid','=',$home_user['id']];
        $map[] = ['is_read','=',0];
        $count = Db::name('video_fabulous')->alias('a')
            ->join('video','a.content_id = video.id')
            ->where($map)
            ->count();
        return show($count);
    }
    //评论未读消息
    public function comment_unread(){
        $home_user = session('home_user');
        $map[] = ['admin_uid','=',$home_user['id']];
        $map[] = ['is_read','=',0];
        $count = Db::name('video_comment')->alias('a')
            ->join('video','a.content_id = video.id')
            ->where($map)
            ->count();
        return show($count);
    }
    //系统消息
    public function system_msg(){
        // $home_user = session('home_user');
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量
        $data['total']= 1;
        $data['per_page']= 1;
        $data['current_page']= 1;
        $data['last_page']= 1;
        $data['data'][0]= '尊敬的用户。欢迎您的光临！';
        return show($data);
    }

    //粉丝
    public function user_pour(){
        $page = Request::post('page/d', 1);			// 当前页
        $limit = Request::post('limit/d', 20);		// 每页显示数量

        $home_user = session('home_user');
        $map=[];
        $map[] = ['bz_id','=',$home_user['id']];
        $list = Db::name('common_user_pour')
            ->where($map)
            ->order('gid desc')
            ->paginate([
                'list_rows'=> $limit,
                'page' => $page,
            ])->each(function($item, $key){

                $find  = UserModel::where('id',$item['uid'])->find();
                if (!empty($find)){
                    $item['uhead']  = $find['head_img'];
                    $item['nickname']  = $find['nickname'];
                }
                Db::name('common_user_pour')->where('gid',$item['gid'])->update(['is_read'=>1]);
                return $item;
            });
        return show($list);
    }

    //粉丝未读消息
    public function user_pour_unread(){
        $home_user = session('home_user');
        $map[] = ['admin_uid','=',$home_user['id']];
        $map[] = ['is_read','=',0];
        $count = Db::name('common_user_pour')
            ->where($map)
            ->count();
        return show($count);
    }


    //推广返利
    public function rebate_list(){
        $array = [
            ['name'=>'2千元一下','value'=>"50%"],
            ['name'=>'2千~1万','value'=>"60%"],
            ['name'=>'1千~3万','value'=>"65%"],
            ['name'=>'3万以上','value'=>"70%"],
        ];
        return show($array);
    }

    //推广人数，收益总额，推广收益，今日推广收益
    public function income_list(){
        //推广人数

        $count = AgentPath::where('agent_id',$this->UserInfo['id'])->cache(600)->count();

        $MoneyLog = new MoneyLog();
        //2001 代理获得打赏 2010 用户注册奖励代理 2020用户充值奖励代理
        $map = [
            ['type','=',1],
            ['status','in',[2001,2010,2020]],
            ['uid','=',$this->UserInfo['id']],
        ];
        //推广收益
        $popularize = $MoneyLog->where($map)->cache(600)->sum('money');
        //今日推广收益
        $popularizeDay = $MoneyLog->where($map)->whereTime('create_time','today')->cache(600)->sum('money');

        $array =['ren'=>$count,'popularize'=>$popularize,'popularizeDay'=>$popularizeDay];
        return show($array);
    }

    //推广收益明细
    public function revenue_details_list(){
        $page = $this->request->post('page/d',0);
        $limit = $this->request->post('limit/d',20);
        $MoneyLog = new MoneyLog();
        $map = [
            ['type','=',1],
            ['status','in',[2001,2010,2020,2030]],
            ['uid','=',$this->UserInfo['id']],
        ];
        $list = $MoneyLog->where($map)->order('id desc')->field('create_time,type,status,money_before,money_end,money')->paginate([
            'list_rows'=> $limit,
            'page' => $page,
        ]);
        return show($list);
    }
    //推广记录
    public function promotion_record_list(){
        $page = $this->request->post('page/d',0);
        $limit = $this->request->post('limit/d',20);
        $MoneyLog = new UserModel();

        $list = $MoneyLog->where('agent_id',$this->UserInfo['id'])->order('id desc')->field('create_time,user_name,phone,nickname')->paginate([
            'list_rows'=> $limit,
            'page' => $page,
        ]);
        return show($list);
    }
    //去推广
}