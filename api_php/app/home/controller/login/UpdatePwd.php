<?php


namespace app\home\controller\login;

use app\home\controller\Base;
use app\common\model\UserModel as models;
use app\validate\home\Login as validates;
use think\exception\ValidateException;

class UpdatePwd extends Base
{
    protected $model;

    /**
     * 修改密码
     */
    public function initialize()
    {
        $this->model = new models();
        parent::initialize(); // TODO: Change the autogenerated stub
    }


    
    //手机号
    public function update_phone(){
       $phone = $this->request->post('phone',0);
       if ($phone <=0){
           return show([],config('ToConfig.http_code.error'),'手机号不对');
       }
        if (session('home_user.id') <=0){
            return show([],config('ToConfig.http_code.error'),'请登录');
        }
        //插入数据 查询手机号和旧密码是否匹配
        $this->model->where(['id' => session('home_user.id')])->save(['phone'=>$phone,'is_fictitious'=>0]);
        return show([]);
    }
    
    //修改密码  获取用户信息在修改密码
    public function change_pwd()
    {
        //过滤数据
        $postField = 'nickname,pwd';
        $post = $this->request->only(explode(',', $postField), 'post', null);

//        //验证数据
//        try {
//            validate(validates::class)->scene('edit_pwd')->check($post);
//        } catch (ValidateException $e) {
//            // 验证失败 输出错误信息
//            return show([],config('ToConfig.http_code.error'),$e->getError());
//        }

        $data = [];
        if (isset($post['nickname'])){
            if (strlen($post['nickname']) > 24 || strlen($post['nickname'])< 6){
                return show([],config('ToConfig.http_code.error'),'昵称必须大于6位小于24位');
            }
            $data['nickname'] = $post['nickname'];
        }
        if (isset($post['pwd'])){
            if (strlen($post['pwd']) > 24 || strlen($post['pwd'])< 6){
                return show([],config('ToConfig.http_code.error'),'密码必须大于6位小于24位');
            }
            $data['pwd']= pwdEncryption($post['pwd']);
        }
        if (empty($data)){
            return show([],config('ToConfig.http_code.error'),'填写信息错误');
        }

        //插入数据 查询手机号和旧密码是否匹配
        $find = $this->model->where(['id' => session('home_user.id')])->save($data);
        if (empty($find)) return show([],config('ToConfig.http_code.error'),'修改密码失败');
        return show();
    }

    //忘记密码
    public function forget()
    {
        //过滤数据
        $postField = 'phone,pwd';
        $post = $this->request->only(explode(',', $postField), 'post', null);

        //验证数据
        try {
            validate(validates::class)->scene('forget')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
            return show([],config('ToConfig.http_code.error'),$e->getError());
        }

        //判断输入账号是否正确
        if ($post['phone'] != session('home_user.phone')) return $this->failed('输入账号和登陆的不匹配');
        //插入数据
        $find = $this->model->where(['phone' => $post['phone']])
            ->save(['pwd' => pwdEncryption($post['pwd'])]);
        if (empty($find)) return show([],config('ToConfig.http_code.error'),'修改密码失败');
        return show();
    }
}